/**
 * @ngdoc object
 * @name ccGenerator
 * @description
 * 	Utility function to generate credit card <br>
 *  See {@link http://visionmedia.github.io/superagent/} SuperAgent HTTP Request
 */

var ccGenerator = function(){
  'use strict';
  var that = this;

  var pos;
  var str = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
  var sum = 0;
  var final_digit = 0;
  var t = 0;
  var len_offset = 0;
  var len = 0;

  /**
   * @ngdoc Methods
   * @name getVisaCC
   * @methodOf ccGenerator
   * @description return a VISA credit card value (16-digits)
   */
  this.getVisaCC = function(){
    str[0] = 4;
    pos = 1;
    len = 16;
    return this.luhnChecksum(str, pos, len, t);
  };

  /**
   * @ngdoc Methods
   * @name getMasterCC
   * @methodOf ccGenerator
   * @description return a Master credit card value
   */
  this.getMasterCC = function(){
    str[0] = 5;
    t = Math.floor(Math.random() * 5) % 5;
    str[1] = 1 + t;	  // Between 1 and 5.
    pos = 2;
    len = 16;
    return this.luhnChecksum(str, pos, len, t);
  };

  /**
   * @ngdoc Methods
   * @name getAmexCC
   * @methodOf ccGenerator
   * @description return an American Express credit card value
   */
  this.getAmexCC = function(){
    str[0] = 3;
    t = Math.floor(Math.random() * 4) % 4;
    str[1] = 4 + t;	  // Between 4 and 7.
    pos = 2;
    len = 15;
    return this.luhnChecksum(str, pos, len, t);
  };

  /**
   * @ngdoc Methods
   * @name getDiscoverCC
   * @methodOf ccGenerator
   * @description return a Discovery credit card value
   */
  this.getDiscoverCC = function(){
    str[0] = 6;
    str[1] = 0;
    str[2] = 1;
    str[3] = 1;
    pos = 4;
    len = 16;
    return this.luhnChecksum(str, pos, len, t);
  };

  /**
   * @ngdoc Methods
   * @name luhnChecksum
   * @methodOf ccGenerator
   * @param {string} str string
   * @param {string} pos position
   * @param {string} len length
   * @param {string} t value
   * @description This function calculates a value that passes the luhn checksum <br>
   */
  this.luhnChecksum = function(str, pos, len, t){
    //
    // Fill all the remaining numbers except for the last one with random values.
    //
    while (pos < len - 1) {
      str[pos++] = Math.floor(Math.random() * 10) % 10;
    }
    //
    // Calculate the Luhn checksum of the values thus far.
    //
    len_offset = (len + 1) % 2;
    for (pos = 0; pos < len - 1; pos++) {
      if ((pos + len_offset) % 2) {
        t = str[pos] * 2;
        if (t > 9) {
          t -= 9;
        }
        sum += t;
      }
      else {
        sum += str[pos];
      }
    }
    //
    // Choose the last digit so that it causes the entire string to pass the checksum.
    //
    final_digit = (10 - (sum % 10)) % 10;
    str[len - 1] = final_digit;
    // return the CC number.
    t = str.join('');
    t = t.substr(0, len);
    return t;
  };
};

module.exports = ccGenerator;
