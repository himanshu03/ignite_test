/**
 * Created by jso on 9/26/14.
 */
/**
 * @name nwp_conf.js
 * @description Standard conf to be use for automation.
 *
 */

var HtmlReporter = require('protractor-html-screenshot-reporter');
var baseConf = require('./base_conf.js');
var baseConfig = new baseConf();
var fs = require('fs');

exports.config = {

  seleniumAddress: 'http://localhost:4444/wd/hub',
  multiCapabilities: [
    {'browserName': 'chrome'}
  ],
  specs: [
    '../specs/WP-lam_spec.js'
  ],

  params: {
    userTicket: '',
    report: 'result',
    globalTimeout: baseConfig.timeout.pageLoad,
    waitForAngular: {
      angularFlag: true,   //Only use false if timeout/interval for polling is failing.
      angularDelay: baseConfig.timeout.angularDelay //this only goes into affect if angularFlag=false
    }
  },

  allScriptsTimeout: baseConfig.timeout.allScriptsTimeout,

  onPrepare: function () {
    global.browsers = {
      a: browser,
      b: browser.forkNewDriverInstance()
    };
    browsers.a.manage().timeouts().pageLoadTimeout(baseConfig.timeout.pageLoad);
    browsers.a.manage().timeouts().implicitlyWait(baseConfig.timeout.implicitWait);
    browsers.a.driver.manage().window().setSize(1000,1000);

    browsers.b.manage().timeouts().pageLoadTimeout(baseConfig.timeout.pageLoad);
    browsers.b.manage().timeouts().implicitlyWait(baseConfig.timeout.implicitWait);
    browsers.b.driver.manage().window().setSize(1000,1000);

    // Add a screenshot reporter and store screenshots to results folder.  It will create folder at the location protractor was ran.
    jasmine.getEnv().addReporter(new HtmlReporter({
      baseDirectory: browser.params.report,
      docTitle: 'NWP Reports',
      takeScreenShotsOnlyForFailedSpecs: true
    }));
  },

// Options to be passed to Jasmine-node.
  jasmineNodeOpts: {
    showColors: true,
    defaultTimeoutInterval: baseConfig.timeout.defaultTimeoutInterval
  }
}
;
