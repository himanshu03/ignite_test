{
  "_args": [
    [
      "protractor-core@git+ssh://git@bitbucket.org/ankurrishi20/protractor-core.git",
      "C:\\UB\\e2e"
    ]
  ],
  "_from": "git+ssh://git@bitbucket.org/ankurrishi20/protractor-core.git",
  "_id": "protractor-core@2.5.2",
  "_inCache": true,
  "_installable": true,
  "_location": "/protractor-core",
  "_phantomChildren": {
    "abbrev": "1.0.7",
    "adm-zip": "0.4.7",
    "brace-expansion": "1.1.4",
    "component-emitter": "1.1.2",
    "connect": "3.4.1",
    "connect-livereload": "0.5.4",
    "cookiejar": "2.0.1",
    "core-util-is": "1.0.2",
    "debug": "2.2.0",
    "eventemitter2": "0.4.14",
    "exit": "0.1.2",
    "formidable": "1.0.14",
    "getobject": "0.1.0",
    "hooker": "0.2.3",
    "inflight": "1.0.5",
    "inherits": "2.0.1",
    "jasmine": "2.4.1",
    "lru-cache": "2.7.3",
    "marked": "0.3.5",
    "methods": "1.0.1",
    "mime": "1.3.4",
    "mkdirp": "0.3.5",
    "morgan": "1.7.0",
    "once": "1.3.3",
    "optimist": "0.6.1",
    "path-is-absolute": "1.0.0",
    "portscanner": "1.0.0",
    "q": "1.4.1",
    "reduce-component": "1.0.1",
    "request": "2.67.0",
    "rimraf": "2.2.8",
    "saucelabs": "1.0.1",
    "selenium-webdriver": "2.52.0",
    "serve-index": "1.7.3",
    "serve-static": "1.10.2",
    "shelljs": "0.3.0",
    "sigmund": "1.0.1",
    "source-map-support": "0.4.0",
    "string_decoder": "0.10.31",
    "underscore": "1.7.0"
  },
  "_requested": {
    "hosted": {
      "directUrl": "https://bitbucket.org/ankurrishi20/protractor-core/raw/master/package.json",
      "httpsUrl": "git+https://bitbucket.org/ankurrishi20/protractor-core.git",
      "shortcut": "bitbucket:ankurrishi20/protractor-core",
      "ssh": "git@bitbucket.org:ankurrishi20/protractor-core.git",
      "sshUrl": "git+ssh://git@bitbucket.org/ankurrishi20/protractor-core.git",
      "type": "bitbucket"
    },
    "name": "protractor-core",
    "raw": "protractor-core@git+ssh://git@bitbucket.org/ankurrishi20/protractor-core.git",
    "rawSpec": "git+ssh://git@bitbucket.org/ankurrishi20/protractor-core.git",
    "scope": null,
    "spec": "git+ssh://git@bitbucket.org/ankurrishi20/protractor-core.git",
    "type": "hosted"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git+ssh://git@bitbucket.org/ankurrishi20/protractor-core.git#9fc54f8f17811b2be5a05abd7fc318999c4e4798",
  "_shasum": "82c204be2dea9ba3367de6824c5f7bf6816270ee",
  "_shrinkwrap": null,
  "_spec": "protractor-core@git+ssh://git@bitbucket.org/ankurrishi20/protractor-core.git",
  "_where": "C:\\UB\\e2e",
  "dependencies": {
    "browser-perf": "1.2.1",
    "escape-html": "1.0.1",
    "grunt": "0.4.5",
    "grunt-cli": "0.1.13",
    "grunt-contrib-clean": "0.6.0",
    "grunt-contrib-connect": "0.11.2",
    "grunt-ngdocs": "0.2.9",
    "jasmine-reporters": "2.0.7",
    "node-resemble-js": "0.0.4",
    "protractor": "3.2.1",
    "protractor-jasmine2-screenshot-reporter": "0.1.7",
    "superagent": "1.4.0"
  },
  "description": "Core file for automation using protractor",
  "devDependencies": {},
  "gitHead": "9fc54f8f17811b2be5a05abd7fc318999c4e4798",
  "homepage": "http://stash.odesk.com/projects/QA/repos/protractor-core/browse",
  "name": "protractor-core",
  "optionalDependencies": {},
  "private": true,
  "readme": "Protractor\r\n====================\r\nProtractor is an end-to-end testing framework for AngularJS applications and works as a solution integrator - combining powerful tools and technologies such as NodeJS, Selenium, webDriver, Jasmine, Cucumber and Mocha.\r\n\r\nVideo Tutorial: http://jenkinsqa.odesk.com:8080/job/protractor_tutorial_videos/ \r\n\r\n\r\n### Setting up IDE to view JS\r\nECLIPSE:: This will prep eclipse to read javascript.\r\n\r\n+ Go into eclipse and nstall new software\r\n + http://download.eclipse.org/releases/juno\r\n+ Select Web, XML, Java EE, etc (and download all of the following addon)\r\n + Pick JavaScript Development Tools\r\n + Pick Eclipse Web Developer Tools\r\n + Pick Web Page Editor\r\n + IDE will now be able to recognize these files\r\n\r\nPHPSTORM:: This will prep phpstorm to read nodejs and run debugger. (I suggest to use this IDE)\r\n\r\n+ Install: http://www.jetbrains.com/phpstorm/\r\n+ Download and enable nodejs plugin: \r\n + Click on PHPSTORM -> preferences -> IDE Settings -> Plugins\r\n + Browse repo and search for nodejs. Install and restart.\r\n + Browse repo and search for jasmine. Install ddescriber for jasmine js.\r\n + Update IDE to recognize jasmine method: <a href=\"http://stackoverflow.com/questions/8108461/how-can-i-get-webstorm-to-recognize-jasmine-methods\">LINK</a> ; make sure to also get angularjs as well.\r\n + Go here to setup IDE: https://www.youtube.com/watch?v=VLMyI7QKcwg . This will show you how to debug and run through IDE.\r\n + Update phpstorm nodejs config so you can easily run and debug specs:\r\n   + ![Alt text](IDEwindows.png?raw=true \"windows\") \r\n   + ![Alt text](IDEmac.png?raw=true \"mac\") \r\n\r\n**Update IDE to use 2 space-tabs instead of full indent**\r\n\r\n**Note**:  GhostDriver (selenium driver for phantomjs) has a [known issue](https://github.com/detro/ghostdriver/issues/170)\r\nwhich causes cookies to be persisted between test runs. For now all tests will be executed using Chrome to avoid this issue.\r\n\r\nInstallation\r\n-----\r\n###MAC\r\n+ Install NodeJS installer from https://nodejs.org/\r\n+ Run the installer to install Nodejs in your mac\r\n+ Install Protractor and WebDriver globally ```npm install -g protractor```\r\n+ Update webdrivers ```webdriver-manager update```\r\n\r\n\r\n###Windows\r\n+ Install NodeJS and npm (NodeJS Package Manager). Go to http://nodejs.org/, download nodeJS Windows Installer msi. Set install location to C:\\Program Files\\nodejs\\\r\n+ Check NodeJS installation, type \"node --version\" in command prompt window.\r\n+ Check npm installation, type \"npm --version\" in command prompt window.\r\n+ Install Protractor and Selenium Web Driver globally. ```npm install protractor -g```. This will install both protractor and selenium-webdriver into Users\\${user}\\AppData\\Roaming\\npm\\node_modules\\\r\n+ Update Web Driver version ```webdriver-manager update```\r\n\r\n\r\nAdd protractor-core (in-house common helper functions) to your project\r\n---\r\n+ The protractor-core is a prerequisite for your protractor test project. It contains the common utilities, configurations, timeout values for your tests.  \r\n+ In your project folder, create a ```package.json``` like below. This will download protractor-core and save it in the node_module folder as dependency for your protractor project.\r\n### Example of package.json:\r\n```\r\n{\r\n  \"name\": \"mobile2.0\",\r\n  \"version\": \"2.1.1\",\r\n  \"description\": \"Mobile Web automation using Protractor: http://stash.odesk.com/projects/QA/repos/mobile2.0/browse\",\r\n  \"dependencies\": {\r\n    \"protractor-core\": \"git+ssh://git@stash.odesk.com:7999/qa/protractor-core.git\"\r\n  }\r\n}\r\n```\r\n+ Run `npm install`\r\n+ For example: mobile2.0: ```http://stash.odesk.com/projects/QA/repos/mobile2.0/browse/package.json```.  Mobile2.0 repo has its own package.json that call protractor-core.  We want each stack to have its own separate repo that is independent of each other.  This give more mobility to every team.  If you think a functions will be shared across all team, then implement it into protractor-core and let the rest of the team know. \r\n+ Note: There isn't a true \"core qa team\" in protractor, you're require to write your own functions.  All the api provided by angularjs for protractor are all online and easily searchable with examples.\r\n\r\n\r\n\r\n\r\nStart WebDriver\r\n------\r\n* This will start the driver and allow us to run protractor: ```webdriver-manager start```\r\n\r\n\r\nRun Protractor Test\r\n------\r\n+ Sample command to run the config which can contain multiple specs:\r\n + ```node protractor client/node_modules/protractor-core/conf/localhost_conf.js --baseUrl https://workplace-internal.elance.com```\r\n+ Sample command to run a single spec with existing conf:\r\n + ```node protractor client/node_modules/protractor-core/conf/localhost_conf.js --specs=client/e2e/specs/WP-302_spec.js --baseUrl https://workplace-internal.elance.com```\r\n+ Sample command to run a single spect:\r\n + ```node protractor /node_modules/protractor-core/conf/eom_conf.js --browser=chrome --specs=/specs/EOM-1357_spec.js --baseUrl=https://stage.upwork.com --verbose --params.report=EOM-1357 ```\r\n\r\n\r\n\r\nReferences\r\n----------\r\n+ [Powerpoint slide Demo](http://ramonvictor.github.io/protractor/slides/#/)\r\n+ [doc.angularjs.org](https://docs.angularjs.org/guide/e2e-testing)\r\n+ [Practical E2E](http://www.ng-newsletter.com/posts/practical-protractor.html)\r\n+ [Video Demo](https://egghead.io/series/learn-protractor-testing-for-angularjs)\r\n+ [Protractor Element](https://github.com/angular/protractor/blob/master/docs/api.md#protractorbyprototypeexactbinding)\r\n\r\nIssues During Installation:\r\n-----\r\n- Unable to install node on OSX\r\n\t- http://forums.webhook.com/t/cant-get-node-to-install-on-latest-osx-mavericks-resolved/109/12\r\n\r\n\r\nSample Team Project Structure Guideline\r\n====================\r\nEach project team should contain below folder structure:\r\n\r\n###Sample team project: mobile web team\r\n`README.md` -- Information for your team project\r\n`package.json` -- define dependencies for your team project. Refer to `Example of package.json` \r\n `/po` -- page object - page declarations goes here\r\n\t+ `loginpage.po.js`\r\n\t+ `signuppage.po.js`\r\n\t+ `myjobspage.po.js`\r\n\t+ `workdiarypage.po.js`\r\n`/specs` -- test files. All tests should be saved under this folder. Priority will be defined in Jenkins so no need to define here. \r\n\t+ `EOM-110_spec.js`\r\n\t+ `EOM-116_spec.js`\r\n\t+ `EOM-204_spec.js` \r\n\r\n\r\nProtractor-core Structure\r\n====================\r\n+ /commons -- contains generic utility functions that can be used for all project teams.   \r\n+ /conf -- contains team specific configuration set up. \r\n+ /docs -- contains ngdoc files \r\n+ /node_modules -- dependency libraries that is defined in package.json\r\n+ .gitignore -- used by git that contains the file names or folders to be ignored for tracking\r\n+ grunt -- utility file to check and compile ngdoc\r\n+ package.json -- to define the dependency libraries that support protractor-core\r\n+ README.md -- this file\r\n+ README-Agora.md -- brief intro of agora.js \r\n+ README-ngdoc.md -- explain how to generate ngdoc\r\n+ README-orpc.md -- brief intro of orpc.js\r\n+ README-PO.md -- brief intro of the page object design \r\n\r\n\r\n\r\n###Documentation using NGdoc\r\n+ https://github.com/angular/angular.js/wiki/Writing-AngularJS-Documentation\r\n+ You'll need a grunt file to run this. Ex: Mobile is based on Page Object structure/orientation.  As such, all our function/methods are require to have ngdoc style documentation.\r\n+ Sample: http://jenkinsqa.odesk.com:8002/docs/#/e2e/header  :: It is searchable and easily readable. \r\n+ We also have page object -> UI mapping: http://stash.odesk.com/projects/QA/repos/mobile2.0/browse/poMapping\r\n\r\n###Sample Script:\r\n+ Refer to our mobile2.0 ReadMe: http://stash.odesk.com/projects/QA/repos/mobile2.0/browse\r\n\r\n![Alt text](jenkinsCI.png?raw=true \"Jenkins CI\")\r\n\r\n\r\n\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@stash.odesk.com:7999/qa/protractor-core.git"
  },
  "version": "2.5.2"
}
